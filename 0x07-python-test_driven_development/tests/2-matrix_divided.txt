# File: tests/2-matrix_divided.txt

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test dividing a 2x2 matrix by 2
>>> matrix_divided([[4, 4], [4, 4]], 2)
[[2.0, 2.0], [2.0, 2.0]]

# Test dividing a 3x3 matrix by 3
>>> matrix_divided([[9, 9, 9], [9, 9, 9], [9, 9, 9]], 3)
[[3.0, 3.0, 3.0], [3.0, 3.0, 3.0], [3.0, 3.0, 3.0]]

# Test dividing a matrix with mixed integers and floats
>>> matrix_divided([[1, 2.0], [3.0, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

# Test dividing by a float
>>> matrix_divided([[1, 2], [3, 4]], 2.0)
[[0.5, 1.0], [1.5, 2.0]]

# Test dividing by 0 (should raise ZeroDivisionError)
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with matrix as a non-list (should raise TypeError)
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with div as a non-number (should raise TypeError)
>>> matrix_divided([[1, 2], [3, 4]], "not a number")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test with rows of different sizes (should raise TypeError)
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with non-number in matrix (should raise TypeError)
>>> matrix_divided([[1, 2], [3, "not a number"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

